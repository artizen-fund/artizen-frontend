{
  "plugins": ["@typescript-eslint", "module-resolver", "import", "react", "prettier"],
  "parser": "@typescript-eslint/parser",
  "extends": [
    "prettier",
    "plugin:@next/next/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:json/recommended",
    "plugin:react/recommended",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": ["error"],
    "json/*": ["error", { "allowComments": true }],

    /* references */
    "prefer-const": "error",
    "no-var": "error",

    /* objects */
    "no-new-object": "error",
    "object-shorthand": ["error", "always", { "avoidQuotes": true }],
    "quote-props": ["error", "as-needed"],

    /* arrays */
    "no-array-constructor": "error",
    "array-callback-return": ["error"],

    /* destructuring */
    "prefer-destructuring": ["error", { "object": true, "array": false }],

    /* strings */
    "quotes": ["error", "single"],
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "prefer-template": "error",
    "template-curly-spacing": ["error", "never"],
    "no-eval": "error",

    /* functions */
    "no-loop-func": "error",
    "prefer-rest-params": "error",
    "default-param-last": ["error"],
    "space-before-function-paren": ["error", { "anonymous": "always", "named": "never" }],
    "space-before-blocks": "error",
    "no-param-reassign": "error",

    /* arrow functions */
    "arrow-spacing": "error",
    "arrow-parens": ["error", "as-needed"],

    /* modules */
    "no-duplicate-imports": "error",
    "import/no-unresolved": "error",

    /* iterators and generators */
    "no-iterator": "error",

    /* variables */
    "one-var": ["error", "never"],
    "no-multi-assign": "error",
    "operator-linebreak": ["error", "after", { "overrides": { "?": "before", ":": "before" } }],

    /* comparison operators */
    "eqeqeq": ["error", "always"],

    /* blocks */
    "nonblock-statement-body-position": ["error", "beside"],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],

    /* whitespace */
    "comma-style": ["error", "last"],
    "comma-dangle": ["error", "always-multiline"],

    /* semicolons */
    "semi": ["error", "never"],

    /* naming-conventions */
    "no-underscore-dangle": "error",

    /* react */
    "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
    "react/react-in-jsx-scope": "off",
    "react/jsx-first-prop-new-line": [2, "multiline"],
    "react/jsx-max-props-per-line": [2, { "maximum": 5, "when": "multiline" }],
    "react/prop-types": "off",

    /* misc */
    "no-console": ["error", { "allow": ["warn", "error"] }]
  },
  "overrides": [
    {
      // or whatever matches stories specified in .storybook/main.js
      "files": ["*.stories.@(ts|tsx|js|jsx|mjs|cjs)"],
      "rules": { "max-len": 0 }
    },
    {
      // or whatever matches stories specified in .storybook/main.js
      "files": ["*.test.@(ts|tsx|js|jsx|mjs|cjs)"],
      "rules": {
        "no-console": 0
      }
    }
  ],

  "settings": {
    "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx"] },
    "import/resolver": { "typescript": { "alwaysTryTypes": true } },
    "react": {
      "version": "detect" // React version. "detect" automatically picks the version you have installed.
    }
  }
}
